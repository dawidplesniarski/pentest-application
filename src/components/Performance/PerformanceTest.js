import { TextField, Button, CircularProgress, List } from '@mui/material'
import React, { useState } from 'react'
import { fetchPerformanceResults } from '../../api/performance'
import {
  ButtonContainer,
  StyledForm,
} from '../../Pages/Performance/Perfomance.styles'
import { Report } from './Report'

export const PerformanceTest = () => {
  const [inProgress, setInProgress] = useState(false)
  const [url, setUrl] = useState('')
  const [reports, setReports] = useState([])
  const [error, setError] = useState(false)


  /**
   * Metoda odpowiedzialna za przeprowadzenie testu wydajności strony internetowej
   * @param event - wydarzenie kliknięcia w przycisk
   * @returns {Promise<void>} - raport wydajności badanej strony.
   */
  const startPerformanceTesting = async (event) => {
    event.preventDefault()
    setInProgress(true)
    setError(false)
    const htmlResultPage = await fetchPerformanceResults(url)
    if (!!htmlResultPage) {
      const newReport = { url, htmlResultPage, date: new Date().toISOString() }
      setReports([...reports, newReport])
    } else {
      setError(true)
    }
    setInProgress(false)
  }

  /**
   * Metoda odpowiedzialna za ustawienie adresu URL docelowej strony
   * @param e - adres URL wpisany przez użytkownika
   */
  const handleUrlChange = (e) => setUrl(e.target.value)

  return (
    <div>
      <StyledForm onSubmit={startPerformanceTesting}>
        <TextField
          fullWidth
          error={error}
          label="URL Testowanej Strony"
          id="outlined-start-adornment"
          disabled={inProgress}
          value={url}
          helperText="Please make sure the link is correct. It must start with http, example https://www.facebook.com"
          onChange={handleUrlChange}
        />
        <ButtonContainer>
          <Button
            disabled={!url || inProgress}
            size="large"
            variant="contained"
            onClick={startPerformanceTesting}
          >
            {inProgress && (
              <CircularProgress
                size={20}
                style={{ color: 'white', marginRight: '1em' }}
              />
            )}
            Przeprowadź test
          </Button>
        </ButtonContainer>
      </StyledForm>
      <List>
        {reports.map(({ url, htmlResultPage, date }) => (
          <Report
            key={date}
            url={url}
            htmlResultPage={htmlResultPage}
            date={date}
          />
        ))}
      </List>
    </div>
  )
}
