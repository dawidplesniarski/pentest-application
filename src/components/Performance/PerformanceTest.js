import { TextField, Button, CircularProgress, List } from '@mui/material'
import React, { useState } from 'react'
import { fetchPerformanceResults } from '../../api/performance'
import { StyledForm } from '../../Pages/Performance/Perfomance.styles'
import { Report } from './Report'

export const PerformanceTest = () => {
  const [inProgress, setInProgress] = useState(false)
  const [url, setUrl] = useState('')
  const [reports, setReports] = useState([])

  const startPerformanceTesting = async () => {
    setInProgress(true)
    const htmlResultPage = await fetchPerformanceResults(url)
    const newReport = { url, htmlResultPage, date: new Date().toISOString() }
    setReports([...reports, newReport])
    setInProgress(false)
  }

  const handleUrlChange = (e) => setUrl(e.target.value)

  return (
    <div>
      <StyledForm>
        <TextField
          label="URL Testowanej Strony"
          id="outlined-start-adornment"
          sx={{ m: 1, width: '25ch' }}
          disabled={inProgress}
          value={url}
          onChange={handleUrlChange}
        />
        {inProgress ? (
          <CircularProgress style={{ marginLeft: '1em' }} />
        ) : (
          <Button
            disabled={!url}
            size="large"
            variant="contained"
            onClick={startPerformanceTesting}
          >
            Przeprowad≈∫ test{' '}
          </Button>
        )}
      </StyledForm>
      <List>
        {reports.map(({ url, htmlResultPage, date }) => (
          <Report
            key={date}
            url={url}
            htmlResultPage={htmlResultPage}
            date={date}
          />
        ))}
      </List>
    </div>
  )
}
